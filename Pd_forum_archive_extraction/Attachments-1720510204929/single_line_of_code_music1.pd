#N canvas 24 185 1029 707 10;
#X obj 576 624 dac~;
#X obj 580 596 hip~ 10;
#X obj 276 126 nbx 5 14 1 64 0 1 empty empty samplerate_divide 0 -8
0 10 -262144 -1 -1 8 256;
#X obj 208 222 int;
#X obj 243 249 + 1;
#X msg 91 74 0;
#X obj 270 -55 bang~;
#X obj 270 -1 until;
#X msg 270 -31 64;
#X obj 264 28 f;
#X obj 295 30 + 1;
#X obj 339 30 sel 0;
#X obj 295 55 mod 64;
#X obj 516 542 table \$0blockbuffer 64;
#X obj 512 518 tabwrite \$0blockbuffer;
#X text 121 76 restart from 0;
#X text 238 222 count to 'infinity';
#X obj 294 80 t f f;
#X obj 199 565 clip -1 1;
#X obj 579 565 tabreceive~ \$0blockbuffer;
#X obj 310 -54 block~ 64;
#X text 303 -30 count to blocksize;
#X text 10 462 code here ->;
#X obj 227 145 mod 8;
#X obj 465 496 float;
#X obj 490 452 t b f;
#X obj 227 169 sel 0;
#X obj 272 334 nbx 5 14 0 128 0 1 empty empty empty 0 -8 0 10 -262144
-1 -1 12 256;
#X obj 303 362 nbx 5 14 0 128 0 1 empty empty empty 0 -8 0 10 -262144
-1 -1 8 256;
#X obj 354 388 nbx 5 14 0 128 0 1 empty empty empty 0 -8 0 10 -262144
-1 -1 63 256;
#X obj 113 463 expr $f1 * (($f1>>$f2|$f1>>$f3)&$f4&$f1>>$f5);
#X obj 399 418 nbx 5 14 0 128 0 1 empty empty empty 0 -8 0 10 -262144
-1 -1 4 256;
#X text 321 317 parameters;
#X text -108 -47 pd implementation of the method presented by 'viznut'
on the countercomplex-blog.;
#X text 423 -38 since i was not able to get messages faster than 64
samples (metro not faster than 1 ms (and bang~ too)) \, i had to calculate
a buffer on blockstart.;
#X obj 479 302 unpack f f f f;
#X msg 498 214 12 8 63 4;
#X msg 544 240 13 8 55 3;
#X text 569 210 standard;
#X msg 604 270 17 11 91 2;
#X connect 1 0 0 0;
#X connect 1 0 0 1;
#X connect 2 0 23 1;
#X connect 3 0 4 0;
#X connect 3 0 30 0;
#X connect 4 0 3 1;
#X connect 5 0 3 1;
#X connect 6 0 8 0;
#X connect 7 0 9 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 12 0;
#X connect 11 0 7 1;
#X connect 12 0 9 1;
#X connect 12 0 11 0;
#X connect 12 0 17 0;
#X connect 17 0 23 0;
#X connect 17 1 25 0;
#X connect 18 0 24 0;
#X connect 19 0 1 0;
#X connect 23 0 26 0;
#X connect 24 0 14 0;
#X connect 25 0 24 0;
#X connect 25 1 14 1;
#X connect 26 0 3 0;
#X connect 27 0 30 1;
#X connect 28 0 30 2;
#X connect 29 0 30 3;
#X connect 30 0 18 0;
#X connect 31 0 30 4;
#X connect 35 0 27 0;
#X connect 35 1 28 0;
#X connect 35 2 29 0;
#X connect 35 3 31 0;
#X connect 36 0 35 0;
#X connect 37 0 35 0;
#X connect 39 0 35 0;
