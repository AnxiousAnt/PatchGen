#N canvas 513 142 880 497 10;
#X obj 29 52 gemhead;
#X obj 29 155 pix_video;
#X obj 589 99 gemwin;
#X msg 566 56 create \, 1;
#X msg 644 57 destroy;
#X obj 29 92 gemframebuffer;
#X obj 29 112 translateXYZ 0 0 -4;
#X obj 559 314 pix_texture;
#X obj 558 402 rectangle 4 3;
#X obj 559 287 pix_rtx;
#X obj 29 175 pix_texture;
#X obj 29 237 square 4;
#X obj 159 357 pix_snap;
#X msg 212 327 512 512;
#X obj 159 297 t b a;
#X obj 219 307 loadbang;
#X msg 159 317 snap;
#X obj 159 387 t a b;
#X obj 159 414 pix_buffer_write \$0-depot;
#X obj 89 47 loadbang;
#X msg 89 67 dimen 512 512;
#X obj 559 234 pix_buffer_read \$0-depot;
#X obj 559 184 gemhead 51;
#X floatatom 130 182 5 0 0 0 - - -;
#X obj 559 204 t a b;
#X obj 29 207 rotateXYZ 0 0 0;
#X msg 311 393 0;
#X obj 262 450 pix_buffer \$0-depot 1;
#X msg 685 207 0;
#X text 43 23 render rotated video into buffer;
#X text 528 150 feed the buffer into pix_rtx;
#X text 157 270 this is how you read back from a framebuffer;
#X connect 0 0 5 0;
#X connect 1 0 10 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 9 0 7 0;
#X connect 10 0 25 0;
#X connect 11 0 14 0;
#X connect 12 0 17 0;
#X connect 13 0 12 2;
#X connect 14 0 16 0;
#X connect 14 1 12 0;
#X connect 15 0 13 0;
#X connect 16 0 12 0;
#X connect 17 0 18 0;
#X connect 17 1 26 0;
#X connect 19 0 20 0;
#X connect 20 0 5 0;
#X connect 21 0 9 0;
#X connect 22 0 24 0;
#X connect 23 0 25 3;
#X connect 24 0 21 0;
#X connect 24 1 28 0;
#X connect 25 0 11 0;
#X connect 26 0 18 1;
#X connect 28 0 21 1;
