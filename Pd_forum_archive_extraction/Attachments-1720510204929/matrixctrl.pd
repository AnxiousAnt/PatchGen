#N struct 1352-matrixctrl float x float y float size float color float
state;
#N canvas 426 166 675 325 10;
#N canvas 227 417 377 349 template 0;
#X obj 9 9 struct \$0-matrixctrl float x float y float size float color
float state;
#X obj 28 292 filledpolygon color 0 1 0 0 0 size size size size 0 0
0;
#X obj 9 52 route click change;
#X obj 88 132 bang;
#X obj 108 172 set \$0-matrixctrl size;
#X obj 28 102 t p p p;
#X obj 9 322 outlet;
#X obj 28 262 set \$0-matrixctrl color state;
#X obj 28 202 get \$0-matrixctrl state;
#X obj 28 222 expr if($f1==0 \, 800 \, 899) \; if($f1==0 \, 1 \, 0)
;
#X obj 68 82 outlet;
#X obj 9 72 t b p b;
#X obj 108 152 value _\$0_size;
#X connect 0 0 2 0;
#X connect 2 0 11 0;
#X connect 2 1 3 0;
#X connect 3 0 12 0;
#X connect 5 0 8 0;
#X connect 5 1 7 2;
#X connect 5 2 4 1;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 9 1 7 1;
#X connect 11 0 6 0;
#X connect 11 1 5 0;
#X connect 11 2 10 0;
#X connect 12 0 4 0;
#X restore 15 161 pd template;
#N canvas 469 219 692 643 generate 0;
#X obj 64 513 symbol \$0-matrixctrl;
#X obj 18 613 s pd-\$0-gui;
#X obj 311 473 pack f f;
#X obj 168 412 f+ 0 1;
#X obj 18 352 until;
#X obj 18 412 f+ 0 1;
#X obj 168 452 i;
#X obj 18 553 pack f f s f;
#X obj 18 382 t b b;
#X msg 311 493 clear \, donecanvasdialog 1 -3 2 0 0 \$1 \$2 \$1 \$2
20 20 \, dirty 0;
#X obj 311 342 pack f f;
#X obj 311 382 s \$0-matrixctrl;
#X msg 311 362 donecanvasdialog 1 -3 2 0 -1 1 1 \$1 \$2 100 50 \, dirty
0;
#X msg 18 573 scalar \$3 \$1 \$2 \$4 899 0;
#X obj 81 72 value _\$0_size;
#X obj 65 112 value _\$0_column;
#X obj 49 152 value _\$0_row;
#X obj 18 12 loadbang;
#X obj 18 332 expr _\$0_row * _\$0_column;
#X obj 168 432 expr $f1 / _\$0_column;
#X obj 18 432 expr $f1 % _\$0_column;
#X obj 33 172 s \$0-INIT;
#X obj 18 32 t b b b b b;
#X obj 255 72 inlet;
#X obj 294 112 unpack f f;
#X obj 285 12 inlet;
#X obj 285 32 t b f;
#X obj 81 52 expr if( \$3 == 0 \, 13 \, \$3 );
#X obj 356 322 expr _\$0_size * _\$0_row + 2;
#X obj 311 302 expr _\$0_size * _\$0_column + 2;
#X obj 311 282 t b b;
#X obj 356 433 expr _\$0_size * _\$0_row;
#X obj 311 453 expr _\$0_size * _\$0_column;
#X obj 311 413 t b b;
#X obj 168 472 expr $f1 * _\$0_size;
#X obj 18 472 expr $f1 * _\$0_size;
#X obj 87 533 value _\$0_size;
#X obj 18 221 t b;
#X obj 18 242 t b b b b b;
#X obj 255 92 t b b a;
#X obj 65 92 \$1;
#X obj 49 132 \$2;
#X text 143 155 (column and row are switched in the variable order
\, because the patch was made so from the beginning);
#X obj 18 312 t b b b;
#X connect 0 0 7 2;
#X connect 2 0 9 0;
#X connect 3 0 19 0;
#X connect 4 0 8 0;
#X connect 5 0 20 0;
#X connect 6 0 34 0;
#X connect 7 0 13 0;
#X connect 8 0 5 0;
#X connect 8 1 3 0;
#X connect 9 0 1 0;
#X connect 10 0 12 0;
#X connect 12 0 11 0;
#X connect 13 0 1 0;
#X connect 17 0 22 0;
#X connect 18 0 4 0;
#X connect 19 0 6 0;
#X connect 20 0 35 0;
#X connect 22 0 37 0;
#X connect 22 1 21 0;
#X connect 22 2 41 0;
#X connect 22 3 40 0;
#X connect 22 4 27 0;
#X connect 23 0 39 0;
#X connect 24 0 16 0;
#X connect 24 1 15 0;
#X connect 25 0 26 0;
#X connect 26 0 37 0;
#X connect 26 1 14 0;
#X connect 27 0 14 0;
#X connect 28 0 10 1;
#X connect 29 0 10 0;
#X connect 30 0 29 0;
#X connect 30 1 28 0;
#X connect 31 0 2 1;
#X connect 32 0 2 0;
#X connect 33 0 32 0;
#X connect 33 1 31 0;
#X connect 34 0 7 1;
#X connect 35 0 7 0;
#X connect 36 0 7 3;
#X connect 37 0 38 0;
#X connect 38 0 43 0;
#X connect 38 1 0 0;
#X connect 38 2 36 0;
#X connect 38 3 33 0;
#X connect 38 4 30 0;
#X connect 39 0 37 0;
#X connect 39 1 21 0;
#X connect 39 2 24 0;
#X connect 40 0 15 0;
#X connect 41 0 16 0;
#X connect 43 0 18 0;
#X connect 43 1 5 1;
#X connect 43 2 3 1;
#X restore 15 131 pd generate;
#N canvas 290 512 450 300 \$0-gui 0;
#X scalar 1352-matrixctrl 0 0 13 899 0 \;;
#X scalar 1352-matrixctrl 13 0 13 899 0 \;;
#X scalar 1352-matrixctrl 0 13 13 899 0 \;;
#X scalar 1352-matrixctrl 13 13 13 899 0 \;;
#X coords 0 0 26 26 26 26 2 20 20;
#X restore 101 51 pd \$0-gui;
#X obj 15 221 outlet;
#X obj 15 251 namecanvas \$0-matrixctrl;
#X obj 15 71 inlet;
#N canvas 789 175 369 465 gui-output 0;
#X obj 25 19 inlet;
#X obj 85 429 outlet;
#X obj 25 99 until;
#X obj 85 149 pointer \$0-matrixctrl;
#X obj 85 99 symbol pd-\$0-gui;
#X msg 85 119 traverse \$1;
#X msg 25 119 next;
#X obj 25 39 t b b;
#X obj 85 169 get \$0-matrixctrl state;
#X obj 25 79 t f f;
#X obj 85 189 list-abs/last-x;
#X obj 85 209 list-abs/list-rev;
#X obj 85 379 list trim;
#X text 65 18 reads fields and gives output;
#X obj 85 399 iemmatrix/mtx_transpose;
#X obj 154 319 pack;
#X obj 175 299 value _\$0_column;
#X obj 154 279 value _\$0_row;
#X msg 154 339 list matrix \$1 \$2;
#X obj 85 359 list prepend;
#X obj 154 239 r \$0-INIT;
#X obj 154 259 t b b;
#X obj 25 59 expr _\$0_row * _\$0_column;
#X connect 0 0 7 0;
#X connect 2 0 6 0;
#X connect 3 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X connect 6 0 3 0;
#X connect 7 0 22 0;
#X connect 7 1 4 0;
#X connect 8 0 10 0;
#X connect 9 0 2 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 11 0 19 0;
#X connect 12 0 14 0;
#X connect 14 0 1 0;
#X connect 15 0 18 0;
#X connect 16 0 15 1;
#X connect 17 0 15 0;
#X connect 18 0 19 1;
#X connect 19 0 12 0;
#X connect 20 0 21 0;
#X connect 21 0 17 0;
#X connect 21 1 16 0;
#X connect 22 0 9 0;
#X restore 15 191 pd gui-output;
#N canvas 0 0 426 446 license 0;
#X text 8 47 All rights reserved.;
#X text 8 227 The names of its contributors may not be used to endorse
or promote products derived from this software without specific prior
written permission.;
#X text 8 87 Redistribution and use in source and binary forms \, with
or without modification \, are permitted provided that the following
conditions are met:;
#X text 8 127 Redistributions of source code must retain the above
copyright notice \, this list of conditions and the following disclaimer.
;
#X text 8 297 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES \, INCLUDING
\, BUT NOT LIMITED TO \, THE IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT \, INDIRECT
\, INCIDENTAL \, SPECIAL \, EXEMPLARY \, OR CONSEQUENTIAL DAMAGES (INCLUDING
\, BUT NOT LIMITED TO \, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES
;
#X text 8 167 Redistributions in binary form must reproduce the above
copyright notice \, this list of conditions and the following disclaimer
in the documentation and/or other materials provided with the distribution.
;
#X text 8 27 jmmmpais@googlemail.com;
#X text 8 7 Copyright 2006 \, Joã Pais;
#X restore 15 295 pd license;
#X text 299 21 Arguments;
#X text 299 111 Inlets;
#X text 299 231 Outlets;
#X text 12 277 (C) 2013 João Pais - jmmmpais@googlemail.com;
#X text 299 252 - output for [iemmatrix/mtx_mul~];
#X text 299 81 - cell size (default is 13);
#N canvas 625 110 573 507 change 0;
#X obj 17 11 inlet;
#X obj 44 241 outlet;
#X obj 127 291 until;
#X obj 113 391 pointer \$0-matrixctrl;
#X obj 113 341 symbol pd-\$0-gui;
#X msg 127 311 next;
#X obj 93 241 unpack f f f;
#X obj 93 221 list-abs/list-rot -1;
#X msg 113 361 traverse \$1;
#X obj 93 464 set \$0-matrixctrl state color;
#X obj 74 201 t b a b;
#X obj 93 421 expr $f1 \; if($f1==1 \, 800 \, 899);
#X obj 333 271 until;
#X obj 373 361 pointer \$0-matrixctrl;
#X obj 373 311 symbol pd-\$0-gui;
#X msg 333 291 next;
#X msg 373 331 traverse \$1;
#X obj 373 431 set \$0-matrixctrl state color;
#X msg 373 411 0 899;
#X obj 333 231 t b b;
#X obj 373 381 t b p;
#X obj 17 91 route mode;
#X obj 74 121 list prepend;
#X msg 37 61 mode AND;
#X obj 74 161 route AND OR;
#X obj 74 141 list trim;
#X obj 37 41 loadbang;
#X obj 333 171 inlet;
#X obj 333 191 spigot 0;
#X obj 108 181 t a b;
#X obj 378 141 sel AND OR;
#X obj 378 121 l2s;
#X obj 378 161 0;
#X obj 406 161 1;
#X obj 127 271 expr $f1 + $f2 * _\$0_column + 1;
#X obj 333 251 expr _\$0_row * _\$0_column;
#X connect 0 0 21 0;
#X connect 2 0 5 0;
#X connect 3 0 9 2;
#X connect 4 0 8 0;
#X connect 5 0 3 0;
#X connect 6 0 11 0;
#X connect 6 1 34 0;
#X connect 6 2 34 1;
#X connect 7 0 6 0;
#X connect 8 0 3 0;
#X connect 10 0 1 0;
#X connect 10 1 7 0;
#X connect 10 2 4 0;
#X connect 11 0 9 0;
#X connect 11 1 9 1;
#X connect 12 0 15 0;
#X connect 13 0 20 0;
#X connect 14 0 16 0;
#X connect 15 0 13 0;
#X connect 16 0 13 0;
#X connect 18 0 17 0;
#X connect 19 0 35 0;
#X connect 19 1 14 0;
#X connect 20 0 18 0;
#X connect 20 1 17 2;
#X connect 21 0 22 1;
#X connect 21 0 31 0;
#X connect 21 1 22 0;
#X connect 22 0 25 0;
#X connect 23 0 21 0;
#X connect 24 0 10 0;
#X connect 24 1 29 0;
#X connect 25 0 24 0;
#X connect 26 0 23 0;
#X connect 27 0 28 0;
#X connect 28 0 19 0;
#X connect 29 0 10 0;
#X connect 29 1 19 0;
#X connect 30 0 32 0;
#X connect 30 1 33 0;
#X connect 31 0 30 0;
#X connect 32 0 28 1;
#X connect 33 0 28 1;
#X connect 34 0 2 0;
#X connect 35 0 12 0;
#X restore 126 191 pd change;
#X text 299 131 - x y z - list with horizontal & vertical positions
\, and state (0/1);
#X text 11 21 [matrixctrl] - GUI for [iemmatrix/mtx_mul~];
#X obj 15 91 route size cellsize;
#X text 299 161 - "mode AND" / "mode OR" - matrix behaviour (default
is AND);
#X text 299 201 - cellsize x - change cell size;
#X text 299 181 - size x y - change matrix size;
#X text 298 41 - number of inputs/rows;
#X text 299 61 - number of outputs/columns;
#X text 357 284 falta: \; - mode fade (AND com pegel \, outro objecto)
;
#X connect 0 0 6 0;
#X connect 0 1 14 1;
#X connect 5 0 17 0;
#X connect 6 0 3 0;
#X connect 14 0 6 0;
#X connect 17 0 1 0;
#X connect 17 1 1 1;
#X connect 17 2 14 0;
#X coords 0 -1 1 1 28 28 2 100 50;
