#N canvas 101 287 793 443 10;
#X obj -61 410 dac~;
#X obj -58 113 rpole~ 1;
#X msg -95 56 set 0;
#X obj -59 85 sig~ 0.181405;
#X obj -58 141 expr~ int($v1);
#X text 44 146 counter 2 int;
#X text -49 55 reset counter;
#X text -3 114 counter;
#X text 34 87 increment for about 8 khz rate;
#X text -159 3 pd implementation of viznuts and bemmus 'one line of
code symphonies' presentetd on countercomplex.blogspot.com.;
#X obj -55 382 *~ 0.5;
#X obj -55 339 lop~ 4000;
#X obj -54 361 lop~ 4000;
#X obj -55 316 lop~ 4000;
#X text 10 343 filter frequencies above 4 khz;
#X text -138 185 code here ->;
#X text 158 281 putchar \, conversion 2 unsigend char;
#X text 258 26 some nice formulas:;
#X text 255 48 expr~ $v1>>6&$v1&($v1*$v1>>14)+4095>>$v1;
#X text 254 64 expr~ $v1&($v1>>4)>>3&$v1>>7;
#X text 255 81 expr~ $v1&($v1>>7)|($v1>>4);
#X text 255 99 expr~ $v1&696969*(sin($v1>>10));
#X text 256 118 expr~ $v1<<(cos($v1&($v1>>7)))|($v1>>8)|($v1<<51|$v1<<32)
;
#X text 256 136 expr~ $v1>>4|$v1>>11&1234<<(($v1*1.5)>>($v1>>7));
#X obj -56 282 expr~ ((($v1&0xff)^0x80)-128)/128;
#X text 259 10 expr~ $v1*(($v1>>12|$v1>>8)&63&$v1>>4);
#X text 494 9 default;
#X obj -59 185 expr~ $v1>>4|$v1>>11&1234<<(($v1*1.5)>>($v1>>7));
#X connect 1 0 4 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 27 0;
#X connect 10 0 0 0;
#X connect 10 0 0 1;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 13 0 11 0;
#X connect 24 0 13 0;
#X connect 27 0 24 0;
