The "reference" section of the documentation should contain a patch 
demonstrating how to use each of Pd's classes.  As of version 0.29, a complete
list of "object" classes follows.  Not included in this list are messages,
atoms, graphs, etc. which aren't typed into object boxes but come
straight off the "add" menu.

---------------------------- GLUE --------------------------------
bang -    output a bang message
float -   store and recall a number
symbol -  store and recall a symbol
int -     store and recall an integer
send -    send a message to a named object
receive - catch "sent" messages
select -  test for matching numbers or symbols
route -   route messages according to first element
pack -    make compound messages
unpack -  get elements of compound messages
trigger - sequence and convert messagess
spigot -  interruptible message connection
moses -   part a numeric stream
until -   looping mechanism
print -   print out messages
makefilename - format a symbol with a variable field
change -  remove repeated numbers from a stream
swap -    swap two numbers
value -   shared numeric value
------------------------------ TIME ----------------------------------
delay -   send a message after a time delay
metro -   send a message periodically
line -    send a series of linearly stepped numbers
timer -   measure time intervals
cputime - measure CPU time
realtime -measure real time
pipe -    dynamically growable delay line for numbers
------------------------------ MATH ----------------------------------
+ - * / pow                                      arithmetic
== != > < >= <=                                  relational tests
& && | || %                                      bit twiddling
mtof ftom powtodb rmstodb dbtopow dbtorms        convert acoustical units
mod div sin cos tan atan atan2 sqrt log exp abs  higher math
random                                           lower math
max min                                          greater or lesser of 2 numbers
clip                                             force a number into a range
------------------------------ MIDI ----------------------------------
notein ctlin pgmin bendin touchin polytouchin midiin sysexin - MIDI input
noteout ctlout pgmout bendout touchout polytouchout midiout  - MIDI output
makenote -  schedule a delayed "note off" message corresponding to a note-on
stripnote - strip "note off" messages
------------------------------ TABLES----------------------------------
tabread -    read a number from a table
tabread4 -   read a number from a table, with 4 point interpolation
tabwrite -   write a number to a table
soundfiler - read and write tables to soundfiles
------------------------------ MISC ----------------------------------
loadbang -   bang on load
serial -     serial device control for NT only
netsend -    send messages over the internet
netreceive - receive them
qlist -      message sequencer
textfile -   file to message converter
openpanel -  "Open" dialog
savepanel -  "Save as" dialog
bag -        set of numbers
poly -       polyphonic voice allocation
key, keyup - numeric key values from keyboard
keyname -    symbolic key name
-------------------------- AUDIO MATH ----------------------------------
+~ -~ *~ /~ arithmetic on audio signals
max~ min~ - maximum or minimum of 2 inputs
clip~ -     constrict signal to lie between two bounds
q8_rsqrt~ - cheap reciprocal square root (beware -- 8 bits!)
q8_sqrt~ -  cheap square root (beware -- 8 bits!)
wrap~ -     wraparound (fractional part, sort of)
fft~ -      complex forward discrete Fourier transform
ifft~ -     complex inverse discrete Fourier transform
rfft~ -     real forward discrete Fourier transform
rifft~ -    real inverse discrete Fourier transform
framp~ -    output a ramp for each block
mtof~, ftom~, rmstodb~, dbtorms~, rmstopow~, powtorms~ - acoustic conversions
-------------------------- AUDIO GLUE ----------------------------------
dac~ -      audio output
adc~ -      audio input
sig~ -      convert numbers to audio signals
line~ -     generate audio ramps
threshold~  detect signal thresholds
snapshot~ - sample a signal (convert it back to a number)
bang~ -     send a bang message after each DSP block
samplerate~ get the sample rate
send~ -     nonlocal signal connection with fanout
receive~ -  get signal from send~
throw~ -    add to a summing bus
catch~ -    define and read a summing bus
block~ -    specify block size and overlap
switch~ -   switch DSP computation on and off
readsf~ -   soundfile playback from disk
writesf~ -  record sound to disk
-------------------- AUDIO OSCILLATORS AND TABLES ------------------------
phasor~ -   sawtooth oscillator
cos~ -      cosine
osc~ -      cosine oscillator
tabwrite~ - write to a table
tabplay~ -  play back from a table (non-transposing)
tabread~ -  non-interpolating table read
tabread4~ - four-point interpolating table read
tabsend~ -  write one block continuously to a table
tabreceive~ read one block continuously from a table
-------------------- AUDIO FILTERS ------------------------
vcf~ -      voltage controlled filter
noise~ -    white noise generator
env~ -      envelope follower
hip~ -      high pass filter
lop~ -      low pass filter
bp~ -       band pass filter
biquad~ -   raw filter
samphold~ - sample and hold unit
print~ -    print out one or more "blocks"
-------------------- AUDIO DELAY ------------------------
delwrite~ - write to a delay line
delread~ -  read from a delay line
vd~ -       read from a delay line at a variable delay time
------------------------------ SUBWINDOWS ----------------------------------
pd -      define a subwindow
inlet -   add an inlet to a pd
outlet -  add an outlet to a pd
table -   array of numbers in a subwindow
------------------------------ DATA TEMPLATES -----------------------------
template - define the fields in a template
drawcurve, filledcurve - draw a curve
drawpolygon, filledpolygon - draw a polygon
plot -       plot an array field
drawnumber - print a numeric value
------------------------------ ACCESSING DATA ----------------------------
pointer - point to an object belonging to a template
get -     get numeric fields
set -     change numeric fields
element - get an array element
getsize - get the size of an array
setsize - change the size of an array
append -  add an element to a list
sublist - get a pointer into a list which is an element of another scalar
scalar -  draw a scalar on parent
------------------------------ OBSOLETE ----------------------------
scope~ (use tabwrite~ now)
namecanvas
