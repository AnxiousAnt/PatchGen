#N canvas 395 80 625 402 10;
#X obj 55 40 inlet;
#N canvas 452 289 450 300 init 0;
#X obj 122 56 inlet;
#X obj 122 197 outlet;
#X obj 122 84 t a a b;
#X obj 161 111 s \$0-init;
#X obj 141 142 list-len;
#X obj 141 167 s \$0-len;
#X text 231 110 <- send bang to init some objects;
#X text 205 166 <- send the length of the list;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 1 4 0;
#X connect 2 2 3 0;
#X connect 4 0 5 0;
#X restore 55 70 pd init;
#X text 112 68 <- init;
#X obj 55 230 t a a;
#X obj 55 99 list-drip;
#X obj 124 175 r \$0-init;
#X obj 187 175 r \$0-order;
#X obj 371 35 inlet;
#X obj 371 62 route ASC DESC;
#X msg 437 96 0;
#X msg 371 96 1;
#X msg 401 96 0;
#X msg 471 96 1;
#X obj 371 128 s isasc;
#X obj 437 128 s isdesc;
#X obj 55 125 t f f;
#X obj 55 319 outlet;
#X obj 82 252 s \$0-listtoorder;
#N canvas 111 181 880 518 test 0;
#X obj 391 210 list-find;
#X msg 391 189 1;
#X obj 391 263 once;
#X obj 45 143 list-len;
#X obj 45 459 outlet;
#X obj 45 307 list;
#X obj 60 200 r \$0-len;
#X obj 45 225 sel;
#X obj 45 165 t f f;
#X obj 66 277 r \$0-order;
#X obj 45 122 t a a;
#X obj 45 92 list-apply >;
#X obj 45 66 spigot 1;
#X obj 263 92 list-apply <;
#X obj 308 42 r isdesc;
#X obj 263 66 spigot 0;
#X obj 45 16 inlet;
#X obj 90 42 r isasc;
#X obj 332 66 r \$0-newelementtotest;
#X obj 114 66 r \$0-newelementtotest;
#X text 351 91 <- the position of the new element must be between the
0 and 1 returned by [list-apply];
#X text 460 207 <- find the first 1 in the list returned by [list-apply]
and return its position;
#X obj 181 426 s \$0-order;
#X text 769 468 2008 Jack/RYBN;
#X text 521 262 <- the 1 exist or not ? if it exist then order the
list (red part) if not do nothing (green part);
#X obj 391 165 t b b a;
#X obj 482 263 == 0;
#X obj 442 263 != 0;
#X obj 174 294 cnv 15 200 125 empty empty empty 20 12 0 14 -258113
-66577 0;
#X obj 384 294 cnv 15 100 50 empty empty empty 20 12 0 14 -4034 -66577
0;
#X obj 181 223 t b f;
#X obj 181 326 list-idx 2;
#X obj 181 267 list;
#X obj 181 202 - 1;
#X obj 181 371 list-insert;
#X obj 181 394 list-delete -1 1;
#X obj 181 302 spigot;
#X obj 202 246 r \$0-init;
#X obj 264 246 r \$0-listtoorder;
#X obj 244 347 r \$0-listtoorder;
#X obj 391 301 spigot;
#X text 96 459 <- when all elements have been sent by [list-drip] \,
a bang is sent to [list] to output the last list send by the red part
or green part;
#X connect 0 0 2 0;
#X connect 0 1 26 0;
#X connect 0 1 27 0;
#X connect 1 0 0 0;
#X connect 2 0 34 1;
#X connect 3 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 7 1;
#X connect 7 0 5 0;
#X connect 8 0 7 0;
#X connect 8 1 33 0;
#X connect 9 0 5 1;
#X connect 10 0 3 0;
#X connect 10 1 25 0;
#X connect 11 0 10 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X connect 14 0 15 1;
#X connect 15 0 13 0;
#X connect 16 0 12 0;
#X connect 16 0 15 0;
#X connect 17 0 12 1;
#X connect 18 0 13 2;
#X connect 19 0 11 2;
#X connect 25 0 1 0;
#X connect 25 1 2 1;
#X connect 25 2 0 1;
#X connect 26 0 40 1;
#X connect 27 0 36 1;
#X connect 30 0 32 0;
#X connect 30 1 31 1;
#X connect 31 0 34 0;
#X connect 32 0 36 0;
#X connect 32 0 40 0;
#X connect 33 0 30 0;
#X connect 34 0 35 0;
#X connect 35 0 22 0;
#X connect 36 0 31 0;
#X connect 37 0 32 1;
#X connect 38 0 32 1;
#X connect 39 0 34 2;
#X connect 40 0 22 0;
#X restore 55 291 pd test;
#X obj 82 148 s \$0-newelementtotest;
#X text 489 344 2008 Jack/RYBN;
#X text 114 289 <- test position of the new value and order it if needed
;
#X text 125 97 <- send elements one after another;
#X text 135 201 <- place the new element from [list-drip] to the end
of the new ordered list;
#X obj 55 203 list prepend;
#X text 259 174 <- receive the new list ordered;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 3 0 18 0;
#X connect 3 1 17 0;
#X connect 4 0 15 0;
#X connect 5 0 24 1;
#X connect 6 0 24 1;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 8 0 10 0;
#X connect 8 1 11 0;
#X connect 8 1 12 0;
#X connect 9 0 14 0;
#X connect 10 0 13 0;
#X connect 11 0 13 0;
#X connect 12 0 14 0;
#X connect 15 0 24 0;
#X connect 15 1 19 0;
#X connect 18 0 16 0;
#X connect 24 0 3 0;
