#N struct data-s float x float y float w array array-s element;
#N struct element float y float w;
#N canvas 514 5 397 893 10;
#X text 17 11 DATA STRUCTURES - TUTORIAL BY JOÃO PAIS;
#X text 133 115 with the structure settings;
#X text 133 135 where the structure will be painted;
#N canvas 588 56 432 407 data-s 0;
#X text 19 220 use [plot] to draw an array;
#X text 22 280 Extra elements just for x-y reference;
#X text 20 18 Array declaration needs 2 variables \, array name + element
name. "array-s" is the array that uses the struct "element" as the
base variable.;
#X obj 21 239 plot array-s 0 2 0 0 30;
#X obj 21 300 drawpolygon 0 2 -5 0 300 0;
#X obj 21 320 drawpolygon 0 2 -5 0 -5 200;
#X obj 21 340 drawnumber 0 -28 0 0 Y=;
#X obj 21 60 struct data-s float x float y float w array array-s element
;
#X obj 21 90 route change click;
#X text 320 110 -> in edit mode;
#X text 136 90 -> in normal mode: THESE DON'T WORK;
#X obj 40 196 s pointer-set;
#X obj 40 146 unpack p f;
#X obj 126 111 route select deselect displace;
#X text 116 153 -> extra value:;
#X text 211 173 - x movement for "displace";
#X text 211 153 - y for "click";
#X text 129 196 Doesn't "change" works with an array?;
#X obj 21 360 drawnumber 100 -39 100 0 Y=;
#X obj 21 380 drawnumber 200 -39 200 0 Y=;
#X connect 7 0 8 0;
#X connect 8 0 12 0;
#X connect 8 1 12 0;
#X connect 8 2 13 0;
#X connect 12 0 11 0;
#X connect 13 0 12 0;
#X connect 13 1 12 0;
#X connect 13 2 12 0;
#X restore 62 115 pd data-s;
#X text 23 172 2 - optionally delete the paint patch;
#X msg 62 195 clear;
#N canvas 0 0 502 353 draw 1;
#X scalar data-s 86 58 0 \; 69 5 \; 23 20 \; 55 17 \; 31 25 \; 62 10
\; 25 20 \; 36 17 \; 71 28 \; 33 1.50564e-038 \; 42 -9 \; \;;
#X restore 62 135 pd draw;
#X obj 62 215 s pd-draw;
#X text 17 31 3 - ARRAYS;
#X text 23 72 1 - Create 3 subpatches:;
#N canvas 900 226 450 172 element 0;
#X obj 43 66 struct element float y float w;
#X text 45 32 Only values y and w are available. In this case \, x
distance stay always fixed.;
#X text 43 111 Each element is marked by a square;
#X obj 43 131 filledpolygon 9 9 1 -3 -3 3 -3 3 3 -3 3;
#X restore 62 95 pd element;
#X text 133 95 structure for each individual element;
#X obj 161 353 pointer;
#X msg 171 333 next;
#X msg 171 313 bang;
#X msg 161 293 traverse pd-draw;
#X text 160 273 1st traverse & bang;
#X obj 62 598 setsize data-s array-s;
#X floatatom 62 578 5 0 0 0 - - -;
#X msg 62 558 10;
#X text 22 303 2nd add new element;
#X text 23 252 3 - add new array;
#X obj 62 473 pointer;
#X obj 62 493 s pointer-set;
#X msg 69 453 next;
#X msg 62 433 traverse pd-draw \, next;
#X text 23 412 4 - to send commands to a pointer \, get it first;
#X obj 126 473 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 148 470 loop;
#X obj 191 578 r pointer-set;
#X floatatom 92 678 5 0 1000 0 - - -;
#X obj 221 678 r pointer-set;
#X obj 92 698 element data-s array-s;
#X floatatom 52 798 5 0 0 0 - - -;
#X msg 52 778 set \$1;
#X obj 62 373 append data-s x y;
#X msg 62 323 50;
#X obj 62 343 t f f;
#X text 23 652 6 - get/set the value of an element;
#X floatatom 142 798 5 0 0 0 - - -;
#X msg 142 778 set \$1;
#X obj 52 758 get element y;
#X obj 52 818 set element y;
#X obj 142 758 get element w;
#X obj 142 818 set element w;
#X obj 92 718 t p p p p;
#X obj 202 598 getsize data-s array-s;
#X floatatom 202 618 5 0 0 0 - - -;
#X text 23 532 5 - set/get the size of the array;
#X obj 110 868 scalar-help;
#X text 19 852 For more information on how to manipulate scalars with
the mouse \, look at;
#X connect 5 0 7 0;
#X connect 12 0 35 2;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 15 0 12 0;
#X connect 18 0 17 0;
#X connect 19 0 18 0;
#X connect 22 0 23 0;
#X connect 22 1 25 0;
#X connect 22 1 27 0;
#X connect 24 0 22 0;
#X connect 25 0 22 0;
#X connect 29 0 17 1;
#X connect 29 0 46 0;
#X connect 30 0 32 0;
#X connect 31 0 32 1;
#X connect 32 0 45 0;
#X connect 33 0 42 0;
#X connect 34 0 33 0;
#X connect 36 0 37 0;
#X connect 37 0 35 0;
#X connect 37 1 35 1;
#X connect 39 0 44 0;
#X connect 40 0 39 0;
#X connect 41 0 34 0;
#X connect 43 0 40 0;
#X connect 45 0 41 0;
#X connect 45 1 42 1;
#X connect 45 2 43 0;
#X connect 45 3 44 1;
#X connect 46 0 47 0;
