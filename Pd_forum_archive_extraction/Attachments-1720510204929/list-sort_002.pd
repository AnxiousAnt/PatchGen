#N canvas 459 47 782 540 10;
#X obj 172 137 list-minmax;
#X obj 172 223 list-find;
#X obj 103 257 list split 1;
#X obj 31 213 list-len;
#X obj 137 278 list split 1;
#X obj 103 320 list append;
#X obj 31 294 list;
#X obj 31 234 > 0;
#X obj 124 419 outlet;
#X obj 31 255 sel 1 0;
#X obj 137 46 inlet;
#X text 29 460 2008 Michal Seta;
#X obj 207 340 list prepend;
#X obj 124 397 list append;
#X obj 356 47 loadbang;
#X obj 291 49 inlet;
#N canvas 0 0 552 424 mux 0;
#X obj 40 52 inlet;
#X obj 153 52 inlet;
#X obj 255 49 inlet;
#X obj 40 266 spigot 1;
#X obj 153 266 spigot;
#X obj 255 223 unpack 0 0;
#X msg 255 177 1 0;
#X msg 306 195 0 1;
#X obj 357 92 select 0;
#X obj 255 70 select asc desc;
#X obj 40 317 outlet;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 9 0;
#X connect 3 0 10 0;
#X connect 4 0 10 0;
#X connect 5 0 3 1;
#X connect 5 1 4 1;
#X connect 6 0 5 0;
#X connect 7 0 5 0;
#X connect 8 0 6 0;
#X connect 8 1 7 0;
#X connect 9 0 6 0;
#X connect 9 1 7 0;
#X connect 9 2 8 0;
#X restore 172 199 pd mux;
#X obj 291 108 list append \$1;
#X obj 291 78 t b a;
#X obj 304 339 t a;
#X obj 137 110 t a a a a b;
#X obj 137 67 t a b;
#X text 266 230 [list-sort] sort an incoming list of numerical values
in an ascending or descending order;
#X connect 0 0 16 0;
#X connect 0 1 16 1;
#X connect 1 0 2 1;
#X connect 2 0 5 0;
#X connect 2 1 4 0;
#X connect 3 0 7 0;
#X connect 4 0 12 0;
#X connect 4 1 5 1;
#X connect 5 0 6 1;
#X connect 6 0 20 0;
#X connect 7 0 9 0;
#X connect 9 0 6 0;
#X connect 9 1 13 0;
#X connect 10 0 21 0;
#X connect 12 0 13 1;
#X connect 12 0 19 0;
#X connect 13 0 8 0;
#X connect 14 0 17 0;
#X connect 15 0 18 0;
#X connect 16 0 1 0;
#X connect 17 0 16 2;
#X connect 18 0 17 0;
#X connect 18 1 17 1;
#X connect 19 0 12 1;
#X connect 20 0 3 0;
#X connect 20 1 2 0;
#X connect 20 2 0 0;
#X connect 20 3 1 1;
#X connect 21 0 20 0;
#X connect 21 1 12 1;
