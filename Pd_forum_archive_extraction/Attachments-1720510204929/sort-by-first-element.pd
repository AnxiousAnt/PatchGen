#N struct 1016-record float x array data 1016-f;
#N struct 1016-f float x;
#N canvas 207 22 659 671 10;
#N canvas 0 0 450 300 \$0-f 0;
#X obj 59 51 struct \$0-f float x;
#X restore 452 19 pd \$0-f;
#N canvas 0 0 450 300 \$0-sort 0;
#X scalar 1016-record 0.4 \; 30 \; 0.4 \; 50 \; 60 \; \;;
#X scalar 1016-record 5 \; 4 \; 5 \; 6 \; 7 \; 8 \; 9 \; \;;
#X scalar 1016-record 20 \; 10 \; 20 \; 30 \; 40 \; \;;
#X scalar 1016-record 60 \; 50 \; 60 \; 70 \; 80 \; 90 \; \;;
#X restore 456 97 pd \$0-sort;
#X obj 223 52 inlet;
#N canvas 523 377 450 300 \$0-record 0;
#X obj 75 73 struct \$0-record float x array data \$0-f;
#X restore 452 39 pd \$0-record;
#X obj 23 53 inlet;
#X obj 52 405 getsize \$0-record data;
#X obj 23 334 pointer;
#X obj 79 261 symbol pd-\$0-sort;
#X msg 23 299 next;
#X obj 23 256 until;
#X msg 79 285 traverse \$1;
#X obj 83 220 s pd-\$0-sort;
#X msg 83 200 sort;
#N canvas 0 0 450 300 countto 0;
#X obj 99 58 inlet;
#X obj 99 177 f 0;
#X obj 127 177 + 1;
#X msg 142 143 0;
#X obj 99 208 outlet;
#X obj 99 142 until;
#X obj 99 117 t a b;
#X obj 99 96 max;
#X connect 0 0 7 0;
#X connect 1 0 2 0;
#X connect 1 0 4 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 5 0 1 0;
#X connect 6 0 5 0;
#X connect 6 1 3 0;
#X connect 7 0 6 0;
#X restore 52 436 pd countto;
#X obj 52 468 element \$0-record data;
#X obj 52 497 get \$0-f x;
#X obj 52 527 list prepend;
#X obj 147 527 t a;
#X obj 23 557 list;
#X obj 23 602 outlet;
#X obj 23 367 t b a a b;
#X obj 23 199 t b b b;
#N canvas 0 0 877 555 put-list-into-table 0;
#X obj 589 282 pointer;
#X msg 589 258 traverse \$1 \, bang;
#X msg 621 159 clear;
#X obj 621 184 s pd-\$0-sort;
#X obj 589 234 symbol pd-\$0-sort;
#X obj 466 307 append \$0-record x;
#X obj 87 187 list length;
#X obj 589 55 inlet;
#X obj 466 332 s \$0-current-pointer;
#X obj 87 224 setsize \$0-record data;
#X obj 248 224 r \$0-current-pointer;
#X obj 589 76 t b b;
#X obj 64 84 t a a a;
#X obj 64 258 list-enumerate;
#X obj 64 290 swap;
#X obj 131 325 element \$0-record data;
#X obj 282 299 r \$0-current-pointer;
#X obj 64 350 set \$0-f x;
#X text 110 292 -> "value idx";
#X obj 64 59 inlet;
#X text 584 26 initialize;
#X text 63 31 list;
#X obj 466 213 list;
#X msg 466 247 \$2;
#X floatatom 377 127 5 0 0 0 - - -;
#X msg 419 171 set \, adddollar \$1;
#X obj 419 127 r \$0-sortfield;
#X connect 0 0 5 1;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 11 0;
#X connect 10 0 9 1;
#X connect 11 0 4 0;
#X connect 11 1 2 0;
#X connect 12 0 13 0;
#X connect 12 1 6 0;
#X connect 12 2 22 0;
#X connect 13 0 14 0;
#X connect 14 0 17 0;
#X connect 14 1 15 0;
#X connect 15 0 17 1;
#X connect 16 0 15 1;
#X connect 19 0 12 0;
#X connect 22 0 23 0;
#X connect 23 0 5 0;
#X connect 24 0 25 0;
#X connect 25 0 23 0;
#X connect 26 0 25 0;
#X restore 223 137 pd put-list-into-table;
#X obj 23 91 route bang init sortfield;
#X obj 137 174 s \$0-sortfield;
#X obj 148 126 loadbang;
#X msg 148 146 1;
#X connect 2 0 22 0;
#X connect 4 0 23 0;
#X connect 5 0 13 0;
#X connect 6 0 20 0;
#X connect 6 1 9 1;
#X connect 7 0 10 0;
#X connect 8 0 6 0;
#X connect 9 0 8 0;
#X connect 10 0 6 0;
#X connect 12 0 11 0;
#X connect 13 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 16 0 18 1;
#X connect 17 0 16 1;
#X connect 18 0 19 0;
#X connect 20 0 18 0;
#X connect 20 1 5 0;
#X connect 20 2 14 1;
#X connect 20 3 16 1;
#X connect 21 0 9 0;
#X connect 21 1 7 0;
#X connect 21 2 12 0;
#X connect 23 0 21 0;
#X connect 23 1 22 1;
#X connect 23 2 24 0;
#X connect 25 0 26 0;
#X connect 26 0 24 0;
