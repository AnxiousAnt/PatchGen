#N canvas 1 113 504 515 10;
#N canvas 41 152 569 434 \$0-builder 0;
#X floatatom 105 143 5 1 200 1 nb #0-nb-in #0-nb;
#X floatatom 105 161 5 8 200 1 size(X) #0-size-in #0-size;
#X obj 105 126 bng 15 250 50 0 \$0-write \$0-write-in Write 17 7 0
10 -258113 -1 -1;
#X floatatom 105 179 5 8 200 1 size(Y) #0-size-y-in #0-size-y;
#N canvas 387 103 793 710 \$0-build 0;
#X obj 173 135 until;
#X obj 173 167 f;
#X obj 216 167 + 1;
#X msg 217 135 0;
#X obj 190 340 * 15;
#X obj 190 368 + 50;
#X text 231 366 offset (X);
#X obj 173 108 f 1;
#X obj 173 79 t b b b;
#X msg 264 96 clear \, vis 1;
#X obj 201 105 r \$0-nb;
#X obj 146 8 r \$0-write;
#X obj 231 314 r \$0-size;
#X obj 315 367 pack s f s;
#X msg 315 266 0;
#X obj 315 290 makefilename $%d;
#X obj 315 391 l2s -;
#X obj 315 242 t b f;
#X obj 372 318 loadbang;
#X obj 540 345 pack s f s;
#X msg 540 244 0;
#X obj 540 268 makefilename $%d;
#X obj 540 369 l2s -;
#X obj 540 220 t b f;
#X obj 597 298 loadbang;
#X obj 173 203 t f f f f;
#X text 535 193 Receive symbol;
#X text 312 223 Send symbol;
#X obj 140 675 s pd-\$0-objects;
#X obj 264 122 s pd-\$0-objects;
#X obj 173 436 pack f f f s s f;
#X msg 597 323 symbol vsl-rcv;
#X msg 372 344 symbol vsl-snd;
#X obj 264 75 loadbang;
#X text 379 434 <- ID x size send receive size-y;
#X obj 281 435 r \$0-size-y;
#X msg 173 578 obj \$2 101 bng \$3 250 50 0 \$4 \$5 empty 17 7 0 10
-262144 -1 -1 \;;
#X msg 140 630 obj \$2 75 vsl \$3 \$6 0 127 0 0 \$4 \$5 empty 0 -9
0 10 -262144 -1 -1 0 1 \;;
#X obj 146 29 t b b;
#X obj 146 50 s \$0-write-end;
#X text 511 632 <- build a vslider;
#X text 545 580 <- build a bang;
#X obj 140 547 gate 2;
#X obj 80 446 r \$0-object;
#X obj 80 478 sel bng vsl;
#X msg 80 505 2;
#X msg 111 504 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 25 0;
#X connect 2 0 1 1;
#X connect 3 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 30 1;
#X connect 7 0 0 0;
#X connect 8 0 7 0;
#X connect 8 1 3 0;
#X connect 8 2 9 0;
#X connect 9 0 29 0;
#X connect 10 0 7 1;
#X connect 11 0 38 0;
#X connect 12 0 4 1;
#X connect 12 0 30 2;
#X connect 13 0 16 0;
#X connect 14 0 15 0;
#X connect 15 0 13 0;
#X connect 16 0 30 3;
#X connect 17 0 14 0;
#X connect 17 1 13 1;
#X connect 18 0 32 0;
#X connect 19 0 22 0;
#X connect 20 0 21 0;
#X connect 21 0 19 0;
#X connect 22 0 30 4;
#X connect 23 0 20 0;
#X connect 23 1 19 1;
#X connect 24 0 31 0;
#X connect 25 0 30 0;
#X connect 25 1 4 0;
#X connect 25 2 17 0;
#X connect 25 3 23 0;
#X connect 30 0 42 1;
#X connect 31 0 19 2;
#X connect 32 0 13 2;
#X connect 33 0 9 0;
#X connect 35 0 30 5;
#X connect 36 0 28 0;
#X connect 37 0 28 0;
#X connect 38 0 39 0;
#X connect 38 1 8 0;
#X connect 42 0 37 0;
#X connect 42 1 36 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 44 1 46 0;
#X connect 45 0 42 0;
#X connect 46 0 42 0;
#X restore 103 317 pd \$0-build;
#N canvas 500 113 462 300 \$0-objects 1;
#X obj 50 101 bng 18 250 50 0 \$0-0-vsl-snd \$0-0-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 68 101 bng 18 250 50 0 \$0-1-vsl-snd \$0-1-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 86 101 bng 18 250 50 0 \$0-2-vsl-snd \$0-2-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 104 101 bng 18 250 50 0 \$0-3-vsl-snd \$0-3-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 122 101 bng 18 250 50 0 \$0-4-vsl-snd \$0-4-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 140 101 bng 18 250 50 0 \$0-5-vsl-snd \$0-5-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 158 101 bng 18 250 50 0 \$0-6-vsl-snd \$0-6-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 176 101 bng 18 250 50 0 \$0-7-vsl-snd \$0-7-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 194 101 bng 18 250 50 0 \$0-8-vsl-snd \$0-8-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X obj 212 101 bng 18 250 50 0 \$0-9-vsl-snd \$0-9-vsl-rcv empty 17
7 0 10 -262144 -1 -1;
#X coords 0 -1 1 1 180 78 1 50 50;
#X restore 218 101 pd \$0-objects;
#N canvas 458 151 686 625 \$0-resize 0;
#X obj 150 250 loadbang;
#X obj 87 164 until;
#X obj 87 196 f;
#X obj 115 198 + 1;
#X msg 128 165 0;
#X obj 87 137 f 1;
#X obj 143 137 r \$0-nb;
#X obj 325 319 *;
#X obj 68 55 r \$0-resize;
#X obj 112 357 r \$0-new-size;
#X text 351 108 Compute delta dimensions;
#X text 164 302 symbol construction;
#X obj 87 329 l2s -;
#X text 131 328 from zexy;
#X text 154 559 <- Resize and move objects;
#X text 91 4 Resize and move objects with the same syntax of receive
symbol;
#X obj 176 385 r \$0-new-size-y;
#X obj 87 384 pack s 10 f f;
#X msg 150 277 symbol vsl-rcv;
#X obj 87 303 pack \$0 f s;
#X msg 54 542 \; \$1 size \$2 \$4 \; \$1 delta \$3;
#X obj 54 458 gate 2;
#X msg 87 490 \; \$1 size \$2 \$4 \;;
#X text 188 494 <- Without delta \, when size-x is the same;
#X obj 87 221 t b f f;
#X obj 383 351 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 93 97 t b b b b;
#X obj 383 371 + 1;
#X obj 383 331 == 0;
#X obj -26 104 s \$0-resize-end;
#X obj 68 77 t b b;
#X obj 459 209 r \$0-size;
#X obj 383 258 -;
#X obj 398 233 f;
#X obj 413 138 r \$0-new-size;
#X obj 365 233 f;
#X obj 441 233 f;
#X obj 441 183 r \$0-write-end;
#X text 349 92 TO IMPROVE : FIND A SIMPLIEST WAY ...;
#X connect 0 0 18 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 24 0;
#X connect 3 0 2 1;
#X connect 4 0 2 1;
#X connect 5 0 1 0;
#X connect 6 0 5 1;
#X connect 7 0 17 2;
#X connect 8 0 30 0;
#X connect 9 0 17 1;
#X connect 12 0 17 0;
#X connect 16 0 17 3;
#X connect 17 0 21 1;
#X connect 18 0 19 2;
#X connect 19 0 12 0;
#X connect 21 0 20 0;
#X connect 21 1 22 0;
#X connect 24 0 19 0;
#X connect 24 1 19 1;
#X connect 24 2 7 0;
#X connect 25 0 27 0;
#X connect 26 0 33 0;
#X connect 26 1 5 0;
#X connect 26 2 4 0;
#X connect 26 3 35 0;
#X connect 27 0 21 0;
#X connect 28 0 25 0;
#X connect 30 0 29 0;
#X connect 30 1 26 0;
#X connect 31 0 36 0;
#X connect 32 0 7 1;
#X connect 32 0 28 0;
#X connect 33 0 32 1;
#X connect 34 0 33 1;
#X connect 34 0 35 1;
#X connect 35 0 32 0;
#X connect 36 0 32 1;
#X connect 37 0 36 0;
#X restore 103 338 pd \$0-resize;
#X floatatom 105 215 5 8 200 1 new_size #0-new-size-in #0-new-size
;
#X obj 105 198 bng 15 250 50 0 \$0-resize \$0-resize-in Resize 17 7
0 10 -257985 -1 -1;
#X obj 158 126 bng 15 250 50 0 \$0-open \$0-open-in open 17 7 0 10
-4034 -1 -1;
#N canvas 345 198 671 511 \$0-methods 0;
#X obj 111 27 loadbang;
#X obj 56 54 inlet;
#X obj 56 313 s \$0-nb-in;
#X obj 101 291 s \$0-size-in;
#X obj 146 269 s \$0-size-y-in;
#X obj 191 246 s \$0-new-size-in;
#X obj 236 223 s \$0-new-size-y-in;
#X obj 281 202 s \$0-resize-in;
#X obj 304 177 s \$0-write-in;
#X obj 335 158 s \$0-open-in;
#X obj 65 346 r \$0-open;
#X obj 65 367 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 66 387 vis \$1;
#X obj 66 408 s pd-\$0-objects;
#X obj 56 95 route nb size size-y new-size new-size-y resize write
open object;
#X obj 416 157 s \$0-object;
#X obj 416 135 symbol;
#X msg 111 49 nb 10 \, size 15 \, size-y 127 \, new-size 10 \, new-size-y
50 \, object vsl;
#X connect 0 0 17 0;
#X connect 1 0 14 0;
#X connect 10 0 11 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 14 0 2 0;
#X connect 14 1 3 0;
#X connect 14 2 4 0;
#X connect 14 3 5 0;
#X connect 14 4 6 0;
#X connect 14 5 7 0;
#X connect 14 6 8 0;
#X connect 14 7 9 0;
#X connect 14 8 16 0;
#X connect 16 0 15 0;
#X connect 17 0 14 0;
#X restore 103 295 pd \$0-methods;
#X floatatom 105 233 5 8 200 1 new_size(Y) #0-new-size-y-in #0-new-size-y
;
#X obj 103 273 inlet;
#N canvas 481 167 551 394 \$0-canvasdialog 0;
#X obj 67 209 r \$0-nb;
#X obj 40 211 *;
#X obj 55 156 r \$0-new-size;
#X obj 40 312 s pd-\$0-objects;
#X msg 40 287 donecanvasdialog 1 -1 1 0 -1 1 1 \$1 \$2 \$3 \$4;
#X text 148 258 <- width height offset-x offest-y;
#X obj 238 153 r \$0-size-y;
#X obj 321 168 r \$0-new-size-y;
#X obj 40 76 r \$0-resize-end;
#X obj 40 258 pack f f 50 50;
#X obj 201 67 r \$0-write-end;
#X obj 223 215 + 28;
#X obj 306 194 f;
#X obj 223 193 f;
#X obj 40 104 t b b;
#X obj 40 180 f;
#X obj 131 182 f;
#X obj 146 158 r \$0-size;
#X obj 201 90 t b b;
#X connect 0 0 1 1;
#X connect 1 0 9 0;
#X connect 2 0 15 1;
#X connect 4 0 3 0;
#X connect 6 0 13 1;
#X connect 7 0 12 1;
#X connect 8 0 14 0;
#X connect 9 0 4 0;
#X connect 10 0 18 0;
#X connect 11 0 9 1;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 14 0 15 0;
#X connect 14 1 12 0;
#X connect 15 0 1 0;
#X connect 16 0 1 0;
#X connect 17 0 16 1;
#X connect 18 0 16 0;
#X connect 18 1 13 0;
#X restore 103 361 pd \$0-canvasdialog;
#X text 376 402 gnugpl/jeromeabel.net/05.2013;
#X text 90 22 Create "n" objects and resize them \; -----------------------------------
;
#X connect 12 0 10 0;
#X coords 0 -1 1 1 110 155 1 100 100;
#X restore 20 124 pd \$0-builder;
#X floatatom 25 343 5 0 0 0 - - -;
#X obj 25 470 universal 1;
#X floatatom 45 410 5 0 0 0 - - -;
#X msg 25 368 vsl size \$1;
#X msg 45 430 vsl delta \$1;
#X text 109 468 <- apply to all sliders... quite dangerous;
#X text 132 428 <- delta must be specific for each gui objects;
#X text 143 79 ! Graph on parent dynamically resized appears in the
main \; ! patch ...;
#X text 17 34 gnugpl/jeromeabel.net/05.2013;
#X msg 45 390 -5;
#X msg 73 391 5;
#X text 110 366 <- ok \, but sliders are not packed together;
#X text 151 445 it is ok just when gui objects touch eachother;
#X text 128 482 if there are other sliders in the patch;
#X text 20 317 Another solution : easy \, but it is not all I want
;
#X msg 32 103 object bng;
#X msg 20 83 object vsl;
#X text 19 10 Create GUI objects with receive symbol and resize them
\; --------------------------------------------------------;
#X text 15 64 Change object;
#X connect 1 0 4 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 10 0 3 0;
#X connect 11 0 3 0;
#X connect 16 0 0 0;
#X connect 17 0 0 0;
