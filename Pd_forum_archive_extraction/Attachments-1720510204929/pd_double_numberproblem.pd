#N canvas 338 67 963 602 12;
#N canvas 0 23 450 300 count 0;
#X obj 16 12 inlet;
#X obj 16 42 route bang float;
#X obj 16 92 f;
#X obj 16 152 outlet;
#X obj 56 92 + 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 4 0 2 1;
#X restore 516 176 pd count;
#X obj 516 121 t b f f;
#X obj 515 208 sel;
#X obj 515 244 print done;
#X obj 562 148 + 10;
#X obj 534 338 delay 0;
#X obj 534 368 s \$0-eval++;
#X obj 473 92 r \$0-eval++;
#X obj 533 278 t b f;
#X obj 565 304 print count;
#X msg 516 58 999999;
#X obj 69 80 pow 12;
#X obj 92 137 - 1;
#X obj 69 174 -;
#X msg 69 54 12;
#X obj 69 108 t f f f;
#X floatatom 126 138 7 0 0 0 - - -;
#X floatatom 69 201 5 0 0 0 - - -;
#X text 64 24 1 test if its really Pd double;
#X text 29 223 if its Pd double \, this should be 1;
#X text 652 303 look at console;
#X text 655 343 why does it print incorrect numbers?;
#X text 655 325 the algorithm seems to work -;
#X text 516 31 2 now see this;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 1 1 0 0;
#X connect 1 2 4 0;
#X connect 2 0 3 0;
#X connect 2 1 8 0;
#X connect 4 0 2 1;
#X connect 5 0 6 0;
#X connect 7 0 0 0;
#X connect 8 0 5 0;
#X connect 8 1 9 0;
#X connect 10 0 1 0;
#X connect 11 0 15 0;
#X connect 12 0 13 1;
#X connect 13 0 17 0;
#X connect 14 0 11 0;
#X connect 15 0 13 0;
#X connect 15 1 12 0;
#X connect 15 2 16 0;
