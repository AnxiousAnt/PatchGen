#N canvas 137 64 797 687 10;
#X obj 362 445 + 10;
#X obj 362 369 t f f;
#X obj 392 341 + 1;
#X obj 360 341 f 0;
#X msg 382 318 0;
#X text 435 222 reset;
#X obj 409 474 f \$0;
#X obj 362 424 * 120;
#X obj 437 241 loadbang;
#X obj 313 275 stripExtension;
#X obj 313 254 drip;
#X obj 18 167 inlet;
#X obj 28 190 s \$0-in;
#X obj 28 403 r \$0-out;
#X obj 18 426 outlet;
#X obj 241 115 inlet;
#X obj 449 315 makesymbol pd-%s-array;
#X obj 449 295 f \$0;
#N canvas 18 874 1584 63 1009-array 0;
#X obj 10 10 d:/pixeltango/fx/edge 1 1009 1000;
#X obj 130 10 d:/pixeltango/fx/emboss 2 1009 1000;
#X obj 250 10 d:/pixeltango/fx/gain 3 1009 1000;
#X obj 370 10 d:/pixeltango/fx/motionblur 4 1009 1000;
#X obj 490 10 d:/pixeltango/fx/myabs 5 1009 1000;
#X restore 19 455 pd \$0-array;
#X obj 313 158 t a b;
#X obj 464 178 s \$0-selector;
#X obj 446 149 inlet;
#X obj 525 478 outlet;
#X text 18 120 which Abst to route through?;
#X text 528 496 List of options;
#X obj 525 458 prepend Passthrough;
#X obj 18 373 spigot;
#X msg 363 182 1;
#X obj 430 178 == 0;
#X obj 382 474 + 1;
#X obj 357 254 outlet;
#X obj 106 167 inlet;
#X obj 106 426 outlet;
#X obj 106 373 spigot;
#X obj 116 190 s \$0-in2;
#X obj 116 403 r \$0-out2;
#X obj 255 254 length;
#X obj 263 275 outlet;
#X obj 241 568 makesymbol pd-%s-array;
#X msg 241 588 \; \$1 clear;
#X obj 241 548 f \$0;
#X obj 241 186 route clear;
#X obj 336 507 pack s f f f s f;
#X obj 443 474 f \$1;
#X obj 438 263 t b b b;
#X msg 336 533 \; \$5 obj \$2 10 \$1 \$3 \$4 \$6;
#X obj 255 345 - 1;
#X obj 266 425 >=;
#X obj 264 455 select 1;
#X obj 313 210 dirlist;
#X obj 542 608 outlet;
#X text 541 628 Output bang when done;
#X text 20 11 This abstraction takes a glob pattern in a directory
and creates an array of the abstractions in that folder in an internal
subpatch called [pd \$0-array]. The abstractions are meant to be routing
objects so they all have a global receive and send \, but only one
abstraction in the array at a time will receive input. The abstractions
must contain at least a arrayRouterIn abstraction to broker the communication.
;
#X obj 248 501 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 278 382 f;
#X obj 313 309 t b a b;
#X text 312 385 <- this gets now banged after creating the abs in [pd
\$0-array];
#X connect 0 0 42 1;
#X connect 1 0 7 0;
#X connect 1 1 29 0;
#X connect 2 0 3 1;
#X connect 3 0 2 0;
#X connect 3 0 1 0;
#X connect 3 0 54 1;
#X connect 4 0 3 1;
#X connect 6 0 42 3;
#X connect 7 0 0 0;
#X connect 8 0 4 0;
#X connect 8 0 27 0;
#X connect 8 0 44 0;
#X connect 9 0 55 0;
#X connect 10 0 9 0;
#X connect 11 0 12 0;
#X connect 11 0 26 0;
#X connect 13 0 14 0;
#X connect 15 0 19 0;
#X connect 16 0 42 4;
#X connect 17 0 16 0;
#X connect 19 0 41 0;
#X connect 19 1 17 0;
#X connect 19 1 4 0;
#X connect 19 1 27 0;
#X connect 21 0 20 0;
#X connect 21 0 28 0;
#X connect 25 0 22 0;
#X connect 26 0 14 0;
#X connect 27 0 26 1;
#X connect 27 0 33 1;
#X connect 28 0 26 1;
#X connect 28 0 33 1;
#X connect 29 0 42 2;
#X connect 31 0 33 0;
#X connect 31 0 34 0;
#X connect 33 0 32 0;
#X connect 35 0 32 0;
#X connect 36 0 37 0;
#X connect 36 0 46 0;
#X connect 38 0 39 0;
#X connect 40 0 38 0;
#X connect 41 0 40 0;
#X connect 41 1 49 0;
#X connect 42 0 45 0;
#X connect 43 0 42 5;
#X connect 44 0 6 0;
#X connect 44 1 17 0;
#X connect 44 2 43 0;
#X connect 46 0 47 1;
#X connect 47 0 48 0;
#X connect 48 0 50 0;
#X connect 49 0 10 0;
#X connect 49 0 25 0;
#X connect 49 0 36 0;
#X connect 49 1 30 0;
#X connect 53 0 40 0;
#X connect 54 0 47 0;
#X connect 55 0 54 0;
#X connect 55 1 42 0;
#X connect 55 2 3 0;
