#N canvas 1027 6 492 756 10;
#X msg 93 173 walk the dog;
#X msg 19 173 bang;
#X msg 60 173 234;
#X obj 21 10 print;
#X obj 19 208 print;
#X text 20 44 The print object is used in PD to send messages to the
'terminal window'. When the print object receives a message \, its
output will appear in the terminal window following the name of the
print object and a colon (:). If the print object does not have a name
(which you can supply as an argument within the print object itself)
then the word "print" appears followed by a colon (:) and your message.
;
#X msg 92 240 walk the dog;
#X msg 19 240 bang;
#X msg 59 240 234;
#X obj 19 267 print myPrintObject;
#X text 181 268 A print object with a name.;
#X text 17 309 When the print object receives a list \, it will output
the entire list as a single message. Like below:;
#X obj 17 369 print print_this_list;
#X msg 17 346 10 20 30 foo;
#X msg 17 461 10 20 30 foo;
#X obj 17 514 unpack f f f s;
#X obj 17 547 print unpack_this_list;
#X text 66 201 A print object without a name. Be sure you can see the
terminal window as you click on these messages.;
#X text 74 9 -- print messages to the terminal window;
#X obj 17 608 print~;
#X text 16 587 RELATED OBJECTS;
#X text 17 408 To output the list as separate elements \, the list
needs to be unpacked first. Note that [unpack]'s outlets are triggered
from right to left. Like below:;
#X text 28 481 The arguments here are used to tell PD what type of
atom to expect: (f = float \, s = symbol).;
#X text 17 655 This document was updated for PD version 0.35 test 24
by Dave Sabine as part of a project called pddp proposed to build comprehensive
documentation for PD.;
#X connect 0 0 4 0;
#X connect 1 0 4 0;
#X connect 2 0 4 0;
#X connect 6 0 9 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 13 0 12 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 15 1 16 0;
#X connect 15 2 16 0;
#X connect 15 3 16 0;
