#N struct 1008-color float x float y float farbe;
#N struct 1008-color-display float x float y float farbe;
#N canvas 38 71 952 364 10;
#X obj 239 128 inlet;
#X obj 239 168 outlet;
#N canvas 215 95 775 515 patch 1;
#N canvas 663 406 450 300 element 0;
#X obj 16 23 struct \$0-element float y;
#X restore 12 18 pd element;
#N canvas 560 283 393 363 array 0;
#X obj 19 93 route click;
#X obj 19 113 unpack p f;
#X text 18 7 Variables \; distance - distance between array points
;
#X obj 19 133 s \$0-arrays-pointer;
#X obj 29 283 r \$0-0ref;
#X obj 19 303 drawpolygon 0 1 0 0 right-b 0;
#X obj 19 263 r \$0-INIT-0;
#X text 20 243 Reference line for 0;
#X text 20 193 Symbol for active array;
#X obj 19 213 drawsymbol -v showname arrayname 5 0.9 color;
#X obj 19 43 struct \$0-arrays float x float y array \$0-array-s \$0-element
float distance float right-b float color float thick float showname
symbol arrayname float showarray;
#X obj 19 163 plot -v showarray \$0-array-s color thick 0 0 distance
;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 4 0 5 0;
#X connect 6 0 5 0;
#X connect 10 0 0 0;
#X restore 12 38 pd array;
#X obj 12 68 inlet;
#X obj 189 158 outlet;
#X text 394 332 0ref 0/1 - show 0 line for reference;
#X text 394 382 To define array properties \, choose the array first:
;
#X text 394 402 color - open color chart;
#X text 394 422 color \$1 - sends color value;
#X text 394 442 thick \$1 - sets line thickness (default and minimum
1);
#X text 434 482 (size - define size ????);
#X text 394 232 display x y - size of display;
#N canvas 445 203 335 237 0ref 0;
#X obj 15 32 inlet;
#X obj 15 52 s \$0-0ref;
#X obj 85 182 expr ($f1-1)*$f2;
#X obj 161 82 t p p p;
#X obj 15 132 r \$0-size;
#X obj 95 132 r \$0-distance;
#X obj 95 152 t b f;
#X obj 85 112 getsize \$0-arrays \$0-array-s;
#X obj 180 132 get \$0-arrays distance;
#X obj 85 202 set \$0-arrays right-b;
#X obj 161 62 r \$0-arrays-pointer;
#X text 15 13 Reference line for 0 value;
#X connect 0 0 1 0;
#X connect 2 0 9 0;
#X connect 3 0 7 0;
#X connect 3 1 8 0;
#X connect 3 2 9 1;
#X connect 4 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X connect 6 1 2 1;
#X connect 7 0 2 0;
#X connect 8 0 2 1;
#X connect 10 0 3 0;
#X restore 110 218 pd 0ref;
#N canvas 233 368 344 112 size 0;
#X obj 12 30 inlet;
#X obj 12 50 setsize \$0-arrays \$0-array-s;
#X obj 177 30 r \$0-arrays-pointer;
#X text 11 9 Define array size;
#X connect 0 0 1 0;
#X connect 2 0 1 1;
#X restore 61 158 pd size;
#N canvas 233 368 358 186 color 0;
#X obj 12 30 inlet;
#X obj 123 140 r \$0-arrays-pointer;
#X obj 12 160 set \$0-arrays color;
#X obj 12 50 route float bang;
#N canvas 334 186 514 108 \$0-ds-color-sel 0;
#X obj 4 6 ds-color-sel;
#X obj 4 81 outlet;
#X connect 0 0 1 0;
#X restore 22 120 pd \$0-ds-color-sel;
#X msg 58 70 vis 1;
#X obj 58 90 s pd-\$0-ds-color-sel;
#X msg 32 140 vis 0;
#X text 11 9 Define array color. No argument brings up color chooser.
;
#X connect 0 0 3 0;
#X connect 1 0 2 1;
#X connect 3 0 2 0;
#X connect 3 1 5 0;
#X connect 4 0 2 0;
#X connect 4 0 7 0;
#X connect 5 0 6 0;
#X connect 7 0 6 0;
#X restore 140 198 pd color;
#N canvas 233 368 344 112 thickness 0;
#X obj 12 30 inlet;
#X obj 123 50 r \$0-arrays-pointer;
#X text 11 9 sets line thickness;
#X obj 12 70 set \$0-arrays thick;
#X obj 12 50 expr max($f1 \, 1);
#X connect 0 0 4 0;
#X connect 1 0 3 1;
#X connect 4 0 3 0;
#X restore 160 178 pd thickness;
#X obj 91 138 s \$0-display;
#N canvas 537 166 379 193 init 0;
#X obj 24 21 initbang;
#X obj 64 61 s \$0-INIT;
#X obj 24 61 0;
#X obj 24 81 s \$0-INIT-0;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X connect 2 0 3 0;
#X restore 92 18 pd init;
#N canvas 515 269 403 219 properties 0;
#X obj 26 -32 r \$0-arrays-pointer;
#X obj 26 48 getsize \$0-arrays \$0-array-s;
#X obj 36 -12 get \$0-arrays arrayname;
#X obj 36 8 prepend label;
#X obj 36 28 s \$0-prop-name;
#X msg 253 -12 vis \$1;
#X obj 253 -32 inlet;
#N canvas 68 550 309 151 \$0-properties 0;
#X floatatom 38 43 8 0 0 0 - #0-prop-size -;
#X obj 7 23 cnv 18 100 18 empty \$0-prop-name array1 2 9 0 11 -262144
-1 0;
#X text 6 43 Size;
#X text 6 3 ARRAY PROPERTIES;
#X restore 253 28 pd \$0-properties;
#X obj 253 8 s pd-\$0-properties;
#X obj 26 68 s \$0-prop-size;
#X connect 0 0 1 0;
#X connect 0 0 2 0;
#X connect 1 0 9 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 8 0;
#X connect 6 0 5 0;
#X coords 0 219 1 218 250 80 0;
#X restore 209 218 pd properties;
#X obj 239 198 outlet;
#N canvas 432 420 272 196 dump 0;
#X obj 19 27 inlet;
#X obj 19 157 outlet;
#X obj 19 87 get \$0-arrays arrayname color thick;
#X obj 19 117 pack s f f;
#X obj 19 137 prepend set;
#X obj 58 47 r \$0-arrays-pointer;
#X obj 19 67 pointer;
#X connect 0 0 6 0;
#X connect 2 0 3 0;
#X connect 2 1 3 1;
#X connect 2 2 3 2;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 1;
#X connect 6 0 2 0;
#X restore 239 178 pd dump;
#X text 394 462 dump - dumps display settings through right outlet
;
#N canvas 556 57 351 543 open 0;
#X obj 17 35 l2s;
#X obj 195 165 pointer;
#X obj 34 245 t b p;
#X obj 34 155 t b b;
#X obj 34 305 setsize \$0-arrays \$0-array-s;
#X msg 195 145 traverse \$1 \, bang;
#X obj 44 215 s \$0-arrays-pointer;
#X obj 17 15 inlet;
#X obj 17 385 until;
#X obj 17 405 f+ 0 1;
#X obj 17 455 tabread;
#X obj 66 425 prepend set;
#X obj 209 465 r \$0-arrays-pointer;
#X obj 44 485 element \$0-arrays \$0-array-s;
#X obj 17 425 t f f;
#X obj 17 515 set \$0-element y;
#X text 75 335 reads original array...;
#X text 121 515 ... and writes it in the new array;
#X obj 195 125 symbol \$0-arrays-canvas;
#N canvas 373 77 404 399 display-gui 0;
#X text 222 320 \$1 = x * distÃ¢ncia;
#X text 159 360 from x y;
#X text 185 370 to x y;
#X text 218 360 size x y;
#X obj 15 11 inlet;
#X text 54 11 sets GUI display;
#X obj 45 71 r \$0-display;
#X obj 15 361 s \$0-arrays-canvas;
#X text 123 71 changes GUI display;
#X text 40 191 set "x range to" to the highest value. all arrays fit
in the display window;
#X obj 64 301 - 1;
#X obj 15 31 cyclone/peak;
#X msg 351 17 0;
#X obj 234 231 inlet;
#X msg 15 341 donecanvasdialog 1 -1 2 0 \$4 \$3 \$5 \$1 \$2 0 0 \,
dirty 0;
#X obj 120 151 sel 0 1;
#X obj 93 131 t b f;
#X obj 249 281 f;
#X obj 159 281 f;
#X obj 159 231 t b b;
#X obj 174 261 cyclone/peak;
#X obj 264 261 cyclone/trough;
#X msg 119 281 -1;
#X msg 89 281 1;
#X obj 25 231 sel 1;
#X obj 15 271 t f f;
#X obj 15 321 pack f 100 f 1 -1;
#X obj 210 151 unpack f f;
#X obj 183 131 t b l;
#N canvas 24 264 613 295 xprop 0;
#X obj 138 18 inlet;
#X obj 358 18 inlet;
#X obj 48 118 pointer;
#X obj 48 78 symbol \$0-arrays-canvas;
#X msg 48 98 traverse \$1 \, bang \, next;
#X msg 8 138 next;
#X obj 138 48 sel 0 1;
#X obj 48 188 set \$0-arrays distance;
#X obj 48 138 t b b p;
#X obj 48 168 1;
#X obj 258 118 pointer;
#X obj 258 78 symbol \$0-arrays-canvas;
#X msg 258 98 traverse \$1 \, bang \, next;
#X obj 277 158 getsize \$0-arrays \$0-array-s;
#X msg 218 138 next;
#X obj 277 198 set \$0-arrays distance;
#X obj 258 138 t b p p;
#X floatatom 218 219 5 0 0 0 - - -;
#X floatatom 320 130 5 0 0 0 - - -;
#X obj 277 228 expr if($f1 == $f2 \, 1 \, $f2 / $f1 + ($f2/($f1+1)*0.1))
;
#X obj 277 178 expr $f2 / $f1;
#X floatatom 387 132 5 0 0 0 - - -;
#X obj 262 51 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 237 248 100 & 10 -> 11 \; 100 & 50 -> 101/50 = 2.02 \; 100
& 35 -> 2.91 \, medido a olho;
#X obj 8 118 del 1;
#X obj 218 118 del 1;
#X connect 0 0 6 0;
#X connect 1 0 20 1;
#X connect 2 0 8 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 3 0;
#X connect 8 0 24 0;
#X connect 8 1 9 0;
#X connect 8 2 7 1;
#X connect 9 0 7 0;
#X connect 10 0 16 0;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 13 0 20 0;
#X connect 14 0 10 0;
#X connect 16 0 25 0;
#X connect 16 1 13 0;
#X connect 16 2 15 1;
#X connect 18 0 15 0;
#X connect 20 0 15 0;
#X connect 20 0 17 0;
#X connect 21 0 20 1;
#X connect 22 0 11 0;
#X connect 24 0 5 0;
#X connect 25 0 14 0;
#X restore 45 171 pd xprop;
#X obj 45 91 route xprop yprop ybounds;
#X connect 4 0 11 0;
#X connect 6 0 30 0;
#X connect 10 0 26 2;
#X connect 11 0 29 1;
#X connect 11 0 25 0;
#X connect 11 2 24 0;
#X connect 12 0 11 1;
#X connect 12 0 20 1;
#X connect 12 0 21 1;
#X connect 13 0 20 0;
#X connect 13 0 21 0;
#X connect 14 0 7 0;
#X connect 15 0 23 0;
#X connect 15 0 22 0;
#X connect 15 1 19 0;
#X connect 16 0 26 0;
#X connect 16 1 15 0;
#X connect 17 0 26 4;
#X connect 18 0 26 3;
#X connect 19 0 18 0;
#X connect 19 1 17 0;
#X connect 20 0 18 1;
#X connect 21 0 17 1;
#X connect 22 0 26 4;
#X connect 23 0 26 3;
#X connect 24 0 26 0;
#X connect 25 0 26 0;
#X connect 25 1 10 0;
#X connect 26 0 14 0;
#X connect 27 0 26 3;
#X connect 27 1 26 4;
#X connect 28 0 26 0;
#X connect 28 1 27 0;
#X connect 30 0 29 0;
#X connect 30 1 16 0;
#X connect 30 2 28 0;
#X connect 30 3 26 0;
#X restore 44 285 pd display-gui;
#X obj 51 125 v _\$0_array_size;
#X obj 17 365 v _\$0_array_size;
#X obj 51 105 expr size("$s1");
#X text 195 105 creates new scalar;
#X obj 34 265 v _\$0_array_size;
#X obj 68 75 s \$0-array-to-edit;
#X obj 17 55 t s b s s;
#X obj 17 335 t b b s s;
#X text 72 245 resize and display;
#X obj 128 365 set -symbol \$0-arrays arrayname;
#X obj 34 195 append \$0-arrays x y distance thick showarray;
#X msg 34 175 0 0 1 1 1;
#X connect 0 0 26 0;
#X connect 1 0 30 5;
#X connect 2 0 24 0;
#X connect 2 1 4 1;
#X connect 3 0 31 0;
#X connect 3 1 18 0;
#X connect 5 0 1 0;
#X connect 7 0 0 0;
#X connect 8 0 9 0;
#X connect 9 0 14 0;
#X connect 10 0 15 0;
#X connect 10 0 19 1;
#X connect 11 0 10 0;
#X connect 12 0 13 1;
#X connect 12 0 29 1;
#X connect 13 0 15 1;
#X connect 14 0 10 0;
#X connect 14 1 13 0;
#X connect 18 0 5 0;
#X connect 21 0 8 0;
#X connect 22 0 20 0;
#X connect 24 0 4 0;
#X connect 24 0 19 0;
#X connect 26 0 27 0;
#X connect 26 1 3 0;
#X connect 26 2 22 0;
#X connect 26 3 25 0;
#X connect 27 0 21 0;
#X connect 27 1 9 1;
#X connect 27 2 11 0;
#X connect 27 3 29 0;
#X connect 30 0 2 0;
#X connect 30 0 6 0;
#X connect 31 0 30 0;
#X restore 12 198 pd open;
#N canvas 491 21 364 347 save 0;
#X obj 69 81 l2s;
#X obj 12 11 inlet;
#X obj 69 171 until;
#X obj 69 191 f+ 0 1;
#X obj 138 291 prepend set;
#X obj 234 221 r \$0-arrays-pointer;
#X obj 69 241 element \$0-arrays \$0-array-s;
#X obj 69 101 t b b s;
#X obj 69 261 get \$0-element y;
#X obj 69 321 tabwrite;
#X obj 69 211 t f f;
#X text 117 101 reads edited array...;
#X obj 12 31 route bang;
#X obj 45 51 r \$0-array-to-edit;
#X obj 12 71 symbol;
#X text 210 291 ... and writes it;
#X obj 69 151 getsize \$0-arrays \$0-array-s;
#X obj 69 131 pointer;
#X connect 0 0 7 0;
#X connect 1 0 12 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 4 0 9 0;
#X connect 5 0 6 1;
#X connect 5 0 17 1;
#X connect 6 0 8 0;
#X connect 7 0 17 0;
#X connect 7 1 3 1;
#X connect 7 2 4 0;
#X connect 8 0 9 0;
#X connect 10 0 6 0;
#X connect 10 1 9 1;
#X connect 12 0 14 0;
#X connect 12 1 0 0;
#X connect 13 0 14 1;
#X connect 14 0 7 0;
#X connect 16 0 2 0;
#X connect 17 0 16 0;
#X restore 41 178 pd save;
#X text 394 122 read \$1 - outputs index \$1 of active array;
#N canvas 540 168 384 307 read 0;
#X obj 20 33 inlet;
#X obj 20 53 route float list;
#X obj 20 213 moses 0;
#X obj 237 233 r \$0-arrays-pointer;
#X obj 59 233 element \$0-arrays \$0-array-s;
#X obj 59 253 get \$0-element y;
#X obj 59 273 outlet;
#X obj 205 133 pointer;
#X obj 205 93 symbol \$0-arrays-canvas;
#X msg 205 113 traverse \$1 \, bang \, next;
#X msg 165 153 next;
#X obj 165 133 del 1;
#X obj 224 173 get \$0-arrays arrayname;
#X obj 224 193 select symbol;
#X obj 66 73 unpack f s;
#X obj 205 73 t b s;
#X obj 224 213 pointer;
#X obj 205 153 t b p p;
#X text 21 12 Queries index \$1 of current array \, or of array \$2
;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 14 0;
#X connect 2 1 4 0;
#X connect 3 0 4 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 7 0 17 0;
#X connect 8 0 9 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 16 0;
#X connect 14 0 2 0;
#X connect 14 1 15 0;
#X connect 15 0 8 0;
#X connect 15 1 13 1;
#X connect 16 0 4 1;
#X connect 17 0 11 0;
#X connect 17 1 12 0;
#X connect 17 2 16 1;
#X restore 189 138 pd read;
#X text 394 142 read \$1 \$2 - outputs index \$1 of array \$2;
#X text 394 102 save - writes contents of active array to original
array;
#X text 394 82 save "arrayname" - write contents to an external array
;
#X text 394 63 open "arrayname" - copy contents from an external array
;
#X text 394 312 display ybounds \$1 \$2 - y bounds of display (default
-1 1);
#X text 394 252 display xprop 0/1 - all arrays displayed in their original
lenght \, or fit into the display window (default 0);
#X text 394 282 display yprop 0/1 - all arrays displayed between bounds
1 and -1 \, or fit into the display window (default 0);
#X text 394 12 OPERATIONS;
#X text 394 212 DISPLAY;
#X text 394 182 properties 1/0 - open/close window with array properties
;
#X text 394 42 DATA;
#N canvas 556 57 351 149 write 0;
#X obj 17 35 inlet;
#X obj 209 55 r \$0-arrays-pointer;
#X obj 44 75 element \$0-arrays \$0-array-s;
#X obj 17 105 set \$0-element y;
#X obj 17 55 unpack f f;
#X text 19 15 write values diretly in the array;
#X connect 0 0 4 0;
#X connect 1 0 2 1;
#X connect 2 0 3 1;
#X connect 4 0 3 0;
#X connect 4 1 2 0;
#X restore 262 158 pd write;
#X text 394 162 write \$1 \$2 - write value \$1 in index \$2;
#N canvas 441 323 337 195 active 0;
#X obj 17 35 inlet;
#X obj 206 145 r \$0-arrays-pointer;
#X obj 17 105 line;
#X obj 17 125 mod 2;
#X obj 17 145 change;
#X obj 17 165 set \$0-arrays showarray showname;
#X obj 111 105 line;
#X msg 111 85 0 \, 1 2000;
#X obj 111 125 != 1;
#X obj 17 55 t b b;
#X msg 17 85 0 \, 7 2000;
#X text 17 13 Blinks active array and shows name;
#X connect 0 0 9 0;
#X connect 1 0 5 2;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 8 0;
#X connect 7 0 6 0;
#X connect 8 0 5 1;
#X connect 9 0 10 0;
#X connect 9 1 7 0;
#X connect 10 0 2 0;
#X restore 284 138 pd active;
#X obj 12 88 route open save size display 0ref color thick read properties
dump write active;
#X text 394 352 active - blinks and shows name of active array;
#X text 12 265 - write: enviar nome de array como parametro? \; - list
- lists stored arrays. janela que abre para escolher com click? mostrar
tabela excel de nomes com cores \; - ver ficheiros help all about arrays
para outras features \; - ver features de array+ \; - como acrescentar
e apagar vÃ¡rios arrays na mesma sessao? fazer arrays de arrays funciona?
ou nao se consegue editar os elementos com o rato \, como no exemplo
do workshop? Ou deixar como estÃ¡ \, e para se tirar um array tem que
se reiniciar o objecto \; - display de guias e valores mÃ¡ximos? fazer
tabela com nomes de arrays e esses valores na janela de controle? \;
\; - read e write dos vÃ¡rios scalars nao funciona. por causa de \$0
\, ou nao? \; - display propx 1 nao funciona \;;
#X connect 2 0 39 0;
#X connect 19 0 18 0;
#X connect 24 0 3 0;
#X connect 39 0 21 0;
#X connect 39 1 22 0;
#X connect 39 2 12 0;
#X connect 39 3 15 0;
#X connect 39 4 11 0;
#X connect 39 5 13 0;
#X connect 39 6 14 0;
#X connect 39 7 24 0;
#X connect 39 8 17 0;
#X connect 39 9 19 0;
#X connect 39 10 36 0;
#X connect 39 11 38 0;
#X restore 239 148 pd patch;
#X obj 239 188 namecanvas \$0-arrays-canvas;
#X obj 284 168 outlet;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 2 1 4 0;
#X coords 0 1 99 -1 100 100 2 0 0;
