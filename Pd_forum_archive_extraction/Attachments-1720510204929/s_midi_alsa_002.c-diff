--- s_midi_alsa.c-old	2009-01-17 12:12:42.000000000 -0800
+++ s_midi_alsa.c	2009-01-17 12:13:15.000000000 -0800
@@ -18,6 +18,11 @@
 #include "m_pd.h"
 #include "s_stuff.h"
 
+//the maximum length of input messages
+#ifndef ALSA_MAX_EVENT_SIZE
+#define ALSA_MAX_EVENT_SIZE 512
+#endif
+
 static int alsa_nmidiin;
 static int alsa_midiinfd[MAXMIDIINDEV];
 static int alsa_nmidiout;
@@ -110,7 +115,8 @@
     snd_seq_client_info_free(alsainfo);
     post("Opened Alsa Client %d in:%d out:%d",client,nmidiin,nmidiout);
     sys_setalarm(0);
-    snd_midi_event_new(20,&midiev);
+    //XXX was: snd_midi_event_new(20,&midiev);
+    snd_midi_event_new(ALSA_MAX_EVENT_SIZE,&midiev);
     alsa_nmidiout = nmidiout;
     alsa_nmidiin = nmidiin;
 
@@ -251,7 +257,8 @@
     /* this version uses the asynchronous "read()" ... */
 void sys_alsa_poll_midi(void)
 {
-   unsigned char buf[20];
+   //XXX was unsigned char buf[20];
+   unsigned char buf[ALSA_MAX_EVENT_SIZE];
    int count, alsa_source;
    int i;
    snd_seq_event_t *midievent = NULL;
@@ -266,7 +273,8 @@
         count = snd_seq_event_input(midi_handle,&midievent);
    if (midievent != NULL)
    {
-       count = snd_midi_event_decode(midiev,buf,20,midievent);
+       //XXX was count = snd_midi_event_decode(midiev,buf,20,midievent);
+       count = snd_midi_event_decode(midiev,buf,sizeof(buf),midievent);
        alsa_source = midievent->dest.port;
        for(i=0;i<count;i++)
            sys_midibytein(alsa_source, (buf[i] & 0xff));
