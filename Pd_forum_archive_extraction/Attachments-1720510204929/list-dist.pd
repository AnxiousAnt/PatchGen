#N canvas 0 0 589 476 10;
#N canvas 0 0 545 419 drip 0;
#X obj 64 206 list split 1;
#X obj 64 123 until;
#X obj 64 181 list append;
#X obj 194 206 bang;
#X text 146 90 First store list \, then start the loop;
#X text 163 118 "until" bangs its output until told to stop by a "bang"
to its right inlet.;
#X text 182 160 Store the remaining list.;
#X text 239 205 third outlet of "split" tells us to stop.;
#X obj 64 243 outlet;
#X obj 64 57 inlet;
#X obj 64 86 t b l;
#X text 237 44 From list-help.pd;
#X obj 155 244 outlet;
#X connect 0 0 8 0;
#X connect 0 1 2 1;
#X connect 0 2 3 0;
#X connect 0 2 12 0;
#X connect 1 0 2 0;
#X connect 2 0 0 0;
#X connect 3 0 1 1;
#X connect 9 0 10 0;
#X connect 10 0 1 0;
#X connect 10 1 2 1;
#X restore 255 140 pd drip;
#X obj 323 198 + 1;
#X obj 255 169 t a b;
#X obj 290 199 int;
#X obj 255 88 t a b;
#X msg 324 139 0;
#X text 357 140 reset first;
#X text 98 140 serialize the list;
#X obj 244 396 outlet;
#X obj 298 396 outlet;
#X obj 352 396 outlet;
#X obj 255 263 list prepend 0;
#X obj 255 50 inlet;
#X obj 255 298 route 0 1 2 3;
#X obj 407 397 outlet;
#X obj 290 226 mod \$1;
#X text 70 280 distribute to outlets;
#X obj 378 49 inlet;
#X obj 519 396 outlet;
#X text 482 422 bang after list;
#X text 253 25 list;
#X text 376 25 number of outlets;
#X text 6 1 abstraction list-dist;
#X text 5 16 distributes a list over up to 4 outlets;
#X text 22 440 based on some list abstractions by Frank Barknecht;
#X connect 0 0 2 0;
#X connect 0 1 18 0;
#X connect 1 0 3 1;
#X connect 2 0 11 0;
#X connect 2 1 3 0;
#X connect 3 0 1 0;
#X connect 3 0 15 0;
#X connect 4 0 0 0;
#X connect 4 1 5 0;
#X connect 5 0 3 1;
#X connect 11 0 13 0;
#X connect 12 0 4 0;
#X connect 13 0 8 0;
#X connect 13 1 9 0;
#X connect 13 2 10 0;
#X connect 13 3 14 0;
#X connect 15 0 11 1;
#X connect 17 0 15 1;
