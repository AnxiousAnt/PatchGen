59,105d58
< 
< struct iphdr
< {
< #if __BYTE_ORDER == __LITTLE_ENDIAN
<     unsigned int ihl:4;
<     unsigned int version:4;
< #elif __BYTE_ORDER == __BIG_ENDIAN
<     unsigned int version:4;
<     unsigned int ihl:4;
< #else
< # error "Please fix <bits/endian.h>"
< #endif
<     u_int8_t tos;
<     u_int16_t tot_len;
<     u_int16_t id;
<     u_int16_t frag_off;
<     u_int8_t ttl;
<     u_int8_t protocol;
<     u_int16_t check;
<     u_int32_t saddr;
<     u_int32_t daddr;
<     /*The options start here. */
< };
< 
< struct icmphdr
< {
< 	u_int8_t type;		/* message type */
< 	u_int8_t code;		/* type sub-code */
< 	u_int16_t checksum;
< 	union
< 	{
< 		struct
< 		{
< 			u_int16_t	id;
< 			u_int16_t	sequence;
< 		} echo;			/* echo datagram */
< 		u_int32_t	gateway;	/* gateway address */
< 		struct
< 		{
< 			u_int16_t	__unused;
< 			u_int16_t	mtu;
< 		} frag;			/* path mtu discovery */
< 	} un;
< };
< 
< 
< 
534c487
<     x->x_sport = ntohs(tcp->th_sport);
---
>     x->x_sport = ntohs(tcp->source);
537c490
<     x->x_dport = ntohs(tcp->th_dport);
---
>     x->x_dport = ntohs(tcp->dest);
560c513
<     x->x_sport = ntohs(udp->uh_sport);
---
>     x->x_sport = ntohs(udp->source);
563c516
<     x->x_dport = ntohs(udp->uh_dport);
---
>     x->x_dport = ntohs(udp->dest);
